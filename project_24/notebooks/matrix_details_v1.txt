(NOTE THAT A LOT OF THESE MATRICES ARE ADJACENCY MATRICES, WE HAVE TO CHANGE THEM TO INCIDENCE MATRICES LATER)

The first matrix will be called the A matrix. The A matrix will have dimensions (restaurant x restaurant) . The idea behind this matrix is that we want to capture all  restaurants if they have at least one of the same vertical. More explicitly, if restaurant_i shares at least one vertical with restaurant_j, then A(i,j) = 1, otherwise, A(i,j) = 0. Since vertical is essentially the type of category/cuisine that the restaurant offers,  it makes sense to record this information as restaurants that should be recommended should offer a similar type of vertical. 
This A Matrix can be improved by changing how we assess the relationship. We can break the A matrix previously defined into two matrices. The first new matrix, Matrix A_1, is a r x v matrix (restaurant x vertical) where if restaurant_i contains vertical_j, then A_1(i,j) = 1, otherwise, A_1(i,j) = 0. The first vertical is what the restaurant is primarily labeled as and thus it is more important than the other verticals. The second matrix we can create from the original A matrix is a combination of the same process above, however this time including both vertical_2 and vertical_3. This is still a work in progress as we have to assess whether or not it is even significant keeping the second new matrix. 
The second matrix we created to capture relationships is called the P matrix.  We define the P matrixâ€™s dimensions to be restaurant by restaurant. In this matrix, we capture the relationship between restaurants that have similar polarity scores. For instance, if restaurant_i and  restaruant_j have similar polarity scores, then P(i,j) = 1, otherwise, P(i,j) = 0.  Since polarity is a measure of sentiment orientation, we want to build edges between restaurants that have similar review sentiment orientation because we believe that this is likely an indicator of restaurants that do well and not well. In this case, we decided that similar polarity scores are all scores within an interval of (-.04 , +.04). We are also currently looking for ways to optimize the interval width for better results. 
The third matrix we created to capture relationships is called the S matrix. This matrix will be very similar to the structure of the P Matrix. This time, we capture the relationship between restaurants that have similar subjectivity scores. That is, two restaurants will share an edge if they have similar subjectivity scores. For instance, if restaurant_i and  restaruant_j have similar subjectivity scores, then S(i,j) = 1, otherwise, S(i,j) = 0.  Since subjectivity essentially captures the content of the review of the restaurant, we want to build edges between restaurants that have similar review subjectivity because we believe that this in conjunction with the polarity matrix is likely an indicator of restaurants that do well and not well and thus restaurants that we would want to recommend. In this case, we decided that similar polarity scores are all scores within an interval of (-.03 , +.03). We are also currently looking for ways to optimize the interval width for better results.
The fourth matrix will be called the D matrix. The matrix, Matrix D, is a r x r matrix (restaurant x restaurant) where if restaurant_i is within a driving distance to restaurant_j, then D(i,j) = 1, otherwise, D(i,j) = 0. This relationship is relevant because we believe that the restaurant we are trying to recommend should be relatively close to the restaurant taken as input. The assumption is that a closer restaurant is also an important factor for users. The distance that is relatively close is 3.5 miles (because we usually deal with city data) and distance is calculated using latitude and longitude coordinates.
The fifth matrix, the R matrix, will capture relationships between restaurants who had similar review counts. If restaurant_i has a similar number of reviews as restaurant_j, then R(i,j) = 1, otherwise, R(i,j) = 0In other words, there will be an edge between two nodes if the two restaurants have a similar star rating. Like our D Matrix, we have a numerical value so similarity value is defined as (- 25, +25) reviews.
The fifth matrix that we will be using is called the W matrix. Using the data scraped from the YelpAPI, we were unable to generate the top 5 words from each business. We can then use these words to build the W matrix. The W Matrices dimensions will be restaurant x restaurant. There will be an edge between the two restaurants if the two restaurants have at least 3 of the same top words. The idea is that if the reviews have similar top words, then it is likely that the would be a place we would want to go to because it matches the original query restaurant. 
